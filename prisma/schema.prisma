generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(uuid())
  clerkUserId     String           @unique
  email           String           @unique
  name            String?
  imageUrl        String?
  industry        String?
  industryInsight IndustryInsight? @relation(fields: [industry], references: [industry])
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt

  // Profile fields
  bio         String?       @db.Text
  experience  Int?
  location    String? // Added location field
  linkedInUrl String? // Added LinkedIn URL
  skills      String[]
  assessments Assessment[]
  resume      Resume?
  coverLetter CoverLetter[]

  @@index([email])
  @@index([industry])
}

model Assessment {
  id             String   @id @default(cuid())
  userId         String
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  quizScore      Float
  questions      Json[]
  category       String
  improvementTip String?  @db.Text
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([userId, category])
}

model Resume {
  id        String   @id @default(cuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  content   String   @db.Text
  atsScore  Float?
  feedback  String?  @db.Text
  version   Int      @default(1) // Added version control
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CoverLetter {
  id             String   @id @default(cuid())
  userId         String
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  content        String   @db.Text
  jobDescription String?  @db.Text
  companyName    String
  jobTitle       String
  status         String   @default("draft")
  version        Int      @default(1) // Added version control
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([userId, status])
}

model IndustryInsight {
  id                String   @id @default(cuid())
  industry          String   @unique
  users             User[]
  salaryRanges      Json[]
  growthRate        Float
  demandLevel       String
  topSkills         String[]
  marketOutlook     String
  keyTrends         String[]
  recommendedSkills String[]
  lastUpdated       DateTime @default(now())
  nextUpdate        DateTime
  sourceUrl         String? // Added source URL
  confidence        Float // Added confidence score

  @@index([industry])
}
